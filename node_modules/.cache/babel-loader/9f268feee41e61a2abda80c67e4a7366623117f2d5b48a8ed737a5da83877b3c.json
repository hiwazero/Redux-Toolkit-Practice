{"ast":null,"code":"// import {createStore} from 'redux'\nimport { createSlice, configureStore } from '@reduxjs/toolkit';\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState: initialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\n\n// const counterReducer = (state = {counter: 0, showCounter: true},action)=>{\n//     if(action.type === 'INCREMENT'){\n//         return{\n//             ...state , counter: state.counter + 1 \n//         }\n//     }\n\n//     if(action.type === 'INCREASE'){\n//         return{\n//             ...state , counter: state.counter + action.payload.amount\n//         }\n//     }\n\n//     if(action.type === 'DECREMENT'){\n//         return{\n//            ...state , counter: state.counter - 1\n//         }\n//     }\n\n//     if(action.type === 'TOGGLE'){\n//         return{\n//             ...state , showCounter: !state.showCounter\n//         }\n//     }\n\n//     return state\n// }\n\n// const store = createStore(counterReducer);\n\n// const store = createStore(counterSlice.reducer)\nconst store = configureStore({\n  reducer: counterSlice.reducer\n});\nexport const counterActions = counterSlice.actions;\nexport default store;","map":{"version":3,"names":["createSlice","configureStore","initialState","counter","showCounter","counterSlice","name","reducers","increment","state","decrement","increase","action","payload","toggleCounter","store","reducer","counterActions","actions"],"sources":["C:/Users/MY PC/Desktop/React-Redux/src/store/index.js"],"sourcesContent":["// import {createStore} from 'redux'\r\nimport {createSlice, configureStore} from '@reduxjs/toolkit'\r\n\r\nconst initialState = {counter: 0, showCounter: true}\r\n\r\nconst counterSlice = createSlice({\r\n    name: 'counter',\r\n    initialState: initialState,\r\n    reducers: {\r\n        increment(state) {\r\n            state.counter++\r\n        },\r\n        decrement(state) {\r\n            state.counter--\r\n        },\r\n        increase(state, action) {\r\n            state.counter = state.counter + action.payload\r\n        },\r\n        toggleCounter(state) {\r\n            state.showCounter = !state.showCounter\r\n        }\r\n    }\r\n})\r\n\r\n// const counterReducer = (state = {counter: 0, showCounter: true},action)=>{\r\n//     if(action.type === 'INCREMENT'){\r\n//         return{\r\n//             ...state , counter: state.counter + 1 \r\n//         }\r\n//     }\r\n\r\n//     if(action.type === 'INCREASE'){\r\n//         return{\r\n//             ...state , counter: state.counter + action.payload.amount\r\n//         }\r\n//     }\r\n\r\n//     if(action.type === 'DECREMENT'){\r\n//         return{\r\n//            ...state , counter: state.counter - 1\r\n//         }\r\n//     }\r\n\r\n//     if(action.type === 'TOGGLE'){\r\n//         return{\r\n//             ...state , showCounter: !state.showCounter\r\n//         }\r\n//     }\r\n\r\n//     return state\r\n// }\r\n\r\n// const store = createStore(counterReducer);\r\n\r\n\r\n// const store = createStore(counterSlice.reducer)\r\nconst store = configureStore({\r\n    reducer: counterSlice.reducer\r\n})\r\n\r\nexport const counterActions = counterSlice.actions;\r\n\r\nexport default store\r\n"],"mappings":"AAAA;AACA,SAAQA,WAAW,EAAEC,cAAc,QAAO,kBAAkB;AAE5D,MAAMC,YAAY,GAAG;EAACC,OAAO,EAAE,CAAC;EAAEC,WAAW,EAAE;AAAI,CAAC;AAEpD,MAAMC,YAAY,GAAGL,WAAW,CAAC;EAC7BM,IAAI,EAAE,SAAS;EACfJ,YAAY,EAAEA,YAAY;EAC1BK,QAAQ,EAAE;IACNC,SAAS,CAACC,KAAK,EAAE;MACbA,KAAK,CAACN,OAAO,EAAE;IACnB,CAAC;IACDO,SAAS,CAACD,KAAK,EAAE;MACbA,KAAK,CAACN,OAAO,EAAE;IACnB,CAAC;IACDQ,QAAQ,CAACF,KAAK,EAAEG,MAAM,EAAE;MACpBH,KAAK,CAACN,OAAO,GAAGM,KAAK,CAACN,OAAO,GAAGS,MAAM,CAACC,OAAO;IAClD,CAAC;IACDC,aAAa,CAACL,KAAK,EAAE;MACjBA,KAAK,CAACL,WAAW,GAAG,CAACK,KAAK,CAACL,WAAW;IAC1C;EACJ;AACJ,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAGA;AACA,MAAMW,KAAK,GAAGd,cAAc,CAAC;EACzBe,OAAO,EAAEX,YAAY,CAACW;AAC1B,CAAC,CAAC;AAEF,OAAO,MAAMC,cAAc,GAAGZ,YAAY,CAACa,OAAO;AAElD,eAAeH,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}